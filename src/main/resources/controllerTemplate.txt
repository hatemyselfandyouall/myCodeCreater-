package com.insigma.web.LowCaseClassNameManager;

import com.github.pagehelper.PageInfo;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import star.vo.result.ResultVo;



@RestController
@RequestMapping("LowCaseClassName")
@Api(tags ="tableRemark管理")
@Slf4j
public class ClassNameController extends BasicController {

    @Autowired
    ClassNameFacade LowCaseClassNameFacade;

    @ApiOperation(value = "tableRemark列表")
    @RequestMapping(value = "/list",method = RequestMethod.POST,produces = {"application/json;charset=UTF-8"})
    public ResultVo<ClassName> getClassNameList(@RequestBody ClassNameListVO LowCaseClassNameListVO){
        ResultVo resultVo=new ResultVo();
        try {
            PageInfo<ClassName> LowCaseClassNameList=LowCaseClassNameFacade.getClassNameList(LowCaseClassNameListVO);
            ifLowCaseClassNameList!=null){
                DataListResultDto<ClassName> dataListResultDto=new DataListResultDto<>(LowCaseClassNameList.getList(),(int)LowCaseClassNameList.getTotal());
                resultVo.setResult(dataListResultDto);
                resultVo.setSuccess(true);
            }else {
                resultVo.setResultDes("分页数据缺失");
            }
        }catch (Exception e){
            resultVo.setResultDes("获取tableRemark列表异常");
            log.error("获取tableRemark列表异常",e);
        }
        return resultVo;
    }

    @ApiOperation(value = "tableRemark详情")
    @RequestMapping(value = "/detail",method = RequestMethod.POST,produces = {"application/json;charset=UTF-8"})
    public ResultVo<ClassName> getClassNameDetail(@RequestBody ClassNameDetailVO LowCaseClassNameDetailVO){
        ResultVo resultVo=new ResultVo();
        try {
        ClassName LowCaseClassName=LowCaseClassNameFacade.getClassNameDetail(LowCaseClassNameDetailVO);
        if(LowCaseClassName!=null){
            resultVo.setResult(LowCaseClassName);
            resultVo.setSuccess(true);
        }else {
            resultVo.setResultDes("获取详情失败");
        }
        } catch (Exception e){
        resultVo.setResultDes("获取tableRemark详情异常");
        log.error("获取tableRemark详情异常",e);
    }
        return resultVo;
    }

    @ApiOperation(value = "tableRemark保存")
    @RequestMapping(value = "/save",method = RequestMethod.POST,produces = {"application/json;charset=UTF-8"})
    public ResultVo<ClassName> saveClassName(@RequestBody ClassNameSaveVO LowCaseClassNameSaveVO){
        ResultVo resultVo=new ResultVo();
        try {
            Integer flag = LowCaseClassNameFacade.saveClassName(LowCaseClassNameSaveVO);
            if (1 == flag) {
                resultVo.setResultDes("tableRemark保存成功");
                resultVo.setSuccess(true);
            } else {
                resultVo.setResultDes("tableRemark保存失败");
            }
        }catch (Exception e){
                resultVo.setResultDes("接口保存异常");
                log.error("tableRemark保存异常",e);
            }
        return resultVo;
    }

    @ApiOperation(value = "tableRemark删除")
    @RequestMapping(value = "/delete",method = RequestMethod.DELETE,produces = {"application/json;charset=UTF-8"})
    public ResultVo<ClassName> deleteClassName(@RequestBody ClassNameDeleteVO LowCaseClassNameDeleteVO){
        ResultVo resultVo=new ResultVo();
        try {
            Integer flag = LowCaseClassNameFacade.deleteClassName(LowCaseClassNameDeleteVO);
            if (1 == flag) {
                resultVo.setResultDes("tableRemark删除成功");
                resultVo.setSuccess(true);
            } else {
                resultVo.setResultDes("tableRemark删除失败");
            }
        }catch (Exception e){
            resultVo.setResultDes("tableRemark删除异常");
            log.error("tableRemark删除异常",e);
        }
        return resultVo;
    }


}
